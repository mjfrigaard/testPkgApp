testthat::expect_null(
object = pull_cat_cols(dbl_col)
)
})
get_column_class(df = col_maker(col_type = "dbl", size = 10, missing = FALSE), class = "chr", return_tbl = FALSE)
testthat::test_that("pull_cat_cols() helpers data", {
log_tbl <- col_maker(col_type = "log", size = 10, missing = FALSE)
# test logical columns
testthat::expect_null(
object = pull_cat_cols(log_tbl)
)
int_tbl <- col_maker(col_type = "int", size = 10, missing = FALSE)
# test integer columns
testthat::expect_null(
object = pull_cat_cols(int_tbl)
)
# # test double columns
# dbl_tbl <- col_maker(col_type = "dbl", size = 10, missing = FALSE)
# testthat::expect_null(
#   object = pull_cat_cols(dbl_col)
# )
})
pull_cat_cols(dbl_col)
rlang::last_trace()
rlang::last_trace(drop = FALSE)
select_column_class(col_maker(col_type = "dbl", size = 10, missing = FALSE), class = "double")
select_column_class(col_maker(col_type = "dbl", size = 10, missing = FALSE), class = "dbl")
get_column_class(col_maker(col_type = "dbl", size = 10, missing = FALSE), class = "chr")
get_column_class(col_maker(col_type = "dbl", size = 10, missing = FALSE), class = "chr", return_tbl = FALSE)
source("~/projects/apps/utap/R/pull_cat_cols.R")
chrs
all_chrs_fcts_list
chrs_fcts_list
chrs_fcts
source("~/projects/apps/utap/R/pull_cat_cols.R")
pull_cat_cols(col_maker(col_type = c("dbl",
"chr"), size = 10, missing = FALSE))
pull_cat_cols(col_maker(col_type = c("dbl"), size = 10, missing = FALSE))
devtools::load_all(".")
library(utap)
testthat::test_that("pull_cat_cols() helpers data", {
log_tbl <- col_maker(col_type = "log", size = 10, missing = FALSE)
# test logical columns
testthat::expect_null(
object = pull_cat_cols(log_tbl)
)
int_tbl <- col_maker(col_type = "int", size = 10, missing = FALSE)
# test integer columns
testthat::expect_null(
object = pull_cat_cols(int_tbl)
)
# test double columns
dbl_tbl <- col_maker(col_type = "dbl", size = 10, missing = FALSE)
testthat::expect_null(
object = pull_cat_cols(dbl_col)
)
})
source("~/projects/apps/utap/tests/testthat/helper.R")
testthat::test_that("pull_cat_cols() helpers data", {
log_tbl <- col_maker(col_type = "log", size = 10, missing = FALSE)
# test logical columns
testthat::expect_null(
object = pull_cat_cols(log_tbl)
)
int_tbl <- col_maker(col_type = "int", size = 10, missing = FALSE)
# test integer columns
testthat::expect_null(
object = pull_cat_cols(int_tbl)
)
# test double columns
dbl_tbl <- col_maker(col_type = "dbl", size = 10, missing = FALSE)
testthat::expect_null(
object = pull_cat_cols(dbl_col)
)
})
testthat::test_that("pull_cat_cols() helpers data", {
log_tbl <- col_maker(col_type = "log", size = 10, missing = FALSE)
# test logical columns
testthat::expect_null(
object = pull_cat_cols(log_tbl)
)
int_tbl <- col_maker(col_type = "int", size = 10, missing = FALSE)
# test integer columns
testthat::expect_null(
object = pull_cat_cols(int_tbl)
)
# test double columns
dbl_tbl <- col_maker(col_type = "dbl", size = 10, missing = FALSE)
testthat::expect_null(
object = pull_cat_cols(dbl_tbl)
)
})
devtools::load_all(".")
library(utap)
testthat::test_that("pull_cat_cols() helpers data", {
log_tbl <- col_maker(col_type = "log", size = 10, missing = FALSE)
# test logical columns
testthat::expect_null(
object = pull_cat_cols(log_tbl)
)
int_tbl <- col_maker(col_type = "int", size = 10, missing = FALSE)
# test integer columns
testthat::expect_null(
object = pull_cat_cols(int_tbl)
)
# test double columns
dbl_tbl <- col_maker(col_type = "dbl", size = 10, missing = FALSE)
testthat::expect_null(
object = pull_cat_cols(dbl_tbl)
)
})
null_tbl <- col_maker(col_type = c("log", "int", "dbl"),
size = 10,
missing = FALSE)
testthat::test_that("pull_cat_cols() helpers data", {
null_tbl <- col_maker(col_type = c("log", "int", "dbl"),
size = 10,
missing = FALSE)
# test logical columns
testthat::expect_null(
object = pull_cat_cols(null_tbl)
)
# test integer columns
testthat::expect_null(
object = pull_cat_cols(null_tbl)
)
# test double columns
testthat::expect_null(
object = pull_cat_cols(null_tbl)
)
})
null_tbl <- col_maker(col_type = c("log", "chr", "fct",  "ord"), size = 10,
missing = FALSE)
testthat::test_that("pull_numeric_cols() helpers data", {
null_tbl <- col_maker(col_type = c("log", "chr", "fct",  "ord"), size = 10,
missing = FALSE)
# test logical columns
testthat::expect_null(
object = pull_numeric_cols(null_tbl)
)
# test character columns
testthat::expect_null(
object = pull_numeric_cols(null_tbl)
)
# test factor columns
testthat::expect_null(
object = pull_numeric_cols(null_tbl)
)
testthat::expect_null(
object = pull_numeric_cols(null_tbl)
)
})
test_that("check_facet_vec() character", {
# test character (5 unique values)
chr_test <- check_facet_vec(x =
chr_maker(size = 10, lvls = 5),
type = "chr")
expect_equal(object = chr_test,
expected = TRUE)
# test character (5 unique values, missing)
chr_test <- check_facet_vec(x =
chr_maker(
size = 10,
lvls = 5,
missing = TRUE
),
type = "chr")
expect_equal(object = chr_test,
expected = TRUE)
# test character (6 unique values)
chr_test <- check_facet_vec(x =
chr_maker(size = 10, lvls = 6),
type = "chr")
expect_equal(object = chr_test,
expected = FALSE)
# test character (6 unique values, missing)
chr_test <- check_facet_vec(x =
chr_maker(
size = 10,
lvls = 6,
missing = TRUE
),
type = "chr")
expect_equal(object = chr_test,
expected = FALSE)
})
fs::dir_tree("R")
fs::dir_tree("tests")
fs::dir_tree("tests/testthat/")
fs::dir_tree("tests/testthat/", recurse = FALSE)
covr::report()
installed.packages("covr")
renv::install("covr")
library(covr)
covr::report()
renv::install("DT")
installed.packages("htmltools")
renv::install("htmltools")
covr::report()
devtools::load_all(".")
library(utap)
renv::status()
renv::snapshot()
covr::report()
devtools::load_all(".")
library(utap)
fs::dir_tree("R")
source("~/projects/apps/utap/tests/testthat/helper.R")
test_facet <- tibble::tibble(
chr_facet5 = facet_maker(
facet_type = "fct", size = 10, lvls = 5, missing = FALSE),
chr_facet5_na = facet_maker(
facet_type = "chr", size = 10, lvls = 5, missing = TRUE),
fct_facet5 = facet_maker(
facet_type = "fct", size = 10, lvls = 5, missing = FALSE),
fct_facet5_na = facet_maker(
facet_type = "fct", size = 10, lvls = 5, missing = TRUE),
ord_facet5 = facet_maker(
facet_type = "ord", size = 10, lvls = 5, missing = FALSE),
ord_facet5_na = facet_maker(
facet_type = "ord", size = 10, lvls = 5, missing = TRUE)
)
test_facet
pull_facet_cols(test_facet)
testthat::test_that("pull_facet_cols() works", {
test_facet <- tibble::tibble(
chr_facet5 = facet_maker(
facet_type = "fct", size = 10, lvls = 5, missing = FALSE),
chr_facet5_na = facet_maker(
facet_type = "chr", size = 10, lvls = 5, missing = TRUE),
fct_facet5 = facet_maker(
facet_type = "fct", size = 10, lvls = 5, missing = FALSE),
fct_facet5_na = facet_maker(
facet_type = "fct", size = 10, lvls = 5, missing = TRUE),
ord_facet5 = facet_maker(
facet_type = "ord", size = 10, lvls = 5, missing = FALSE),
ord_facet5_na = facet_maker(
facet_type = "ord", size = 10, lvls = 5, missing = TRUE)
)
expect_equal(
object = pull_facet_cols(test_facet),
expected =
c(chr_facet5 = "chr_facet5",
chr_facet5_na = "chr_facet5_na",
fct_facet5 = "fct_facet5",
fct_facet5_na = "fct_facet5_na",
ord_facet5 = "ord_facet5",
ord_facet5_na = "ord_facet5_na")
)
})
testthat::test_that("pull_facet_cols() works", {
test_facet <- tibble::tibble(
chr_facet5 = facet_maker(
facet_type = "fct", size = 10, lvls = 5, missing = FALSE),
chr_facet5_na = facet_maker(
facet_type = "chr", size = 10, lvls = 5, missing = TRUE),
fct_facet5 = facet_maker(
facet_type = "fct", size = 10, lvls = 5, missing = FALSE),
fct_facet5_na = facet_maker(
facet_type = "fct", size = 10, lvls = 5, missing = TRUE),
ord_facet5 = facet_maker(
facet_type = "ord", size = 10, lvls = 5, missing = FALSE),
ord_facet5_na = facet_maker(
facet_type = "ord", size = 10, lvls = 5, missing = TRUE)
)
expect_equal(
object = pull_facet_cols(test_facet),
expected =
c(chr_facet5_na = "chr_facet5_na",
chr_facet5 = "chr_facet5",
fct_facet5 = "fct_facet5",
fct_facet5_na = "fct_facet5_na",
ord_facet5 = "ord_facet5",
ord_facet5_na = "ord_facet5_na")
)
})
testthat::test_that("pull_facet_cols() works", {
test_facet <- tibble::tibble(
chr_facet5 = facet_maker(
facet_type = "fct", size = 10, lvls = 5, missing = FALSE),
chr_facet5_na = facet_maker(
facet_type = "chr", size = 10, lvls = 5, missing = TRUE),
fct_facet5 = facet_maker(
facet_type = "fct", size = 10, lvls = 5, missing = FALSE),
fct_facet5_na = facet_maker(
facet_type = "fct", size = 10, lvls = 5, missing = TRUE),
ord_facet5 = facet_maker(
facet_type = "ord", size = 10, lvls = 5, missing = FALSE),
ord_facet5_na = facet_maker(
facet_type = "ord", size = 10, lvls = 5, missing = TRUE)
)
expect_equal(
object = pull_facet_cols(test_facet),
expected = purrr::set_names(x = test_facet, names(test_facet))
# c(chr_facet5_na = "chr_facet5_na",
#   chr_facet5 = "chr_facet5",
#   fct_facet5 = "fct_facet5",
#   fct_facet5_na = "fct_facet5_na",
#   ord_facet5 = "ord_facet5",
#   ord_facet5_na = "ord_facet5_na")
)
})
purrr::set_names(x = test_facet, names(test_facet))
purrr::set_names(names(test_facet))
testthat::test_that("pull_facet_cols() works", {
test_facet <- tibble::tibble(
chr_facet5 = facet_maker(
facet_type = "fct", size = 10, lvls = 5, missing = FALSE),
chr_facet5_na = facet_maker(
facet_type = "chr", size = 10, lvls = 5, missing = TRUE),
fct_facet5 = facet_maker(
facet_type = "fct", size = 10, lvls = 5, missing = FALSE),
fct_facet5_na = facet_maker(
facet_type = "fct", size = 10, lvls = 5, missing = TRUE),
ord_facet5 = facet_maker(
facet_type = "ord", size = 10, lvls = 5, missing = FALSE),
ord_facet5_na = facet_maker(
facet_type = "ord", size = 10, lvls = 5, missing = TRUE)
)
expect_equal(
object = pull_facet_cols(test_facet),
expected = purrr::set_names(names(test_facet))
# c(chr_facet5_na = "chr_facet5_na",
#   chr_facet5 = "chr_facet5",
#   fct_facet5 = "fct_facet5",
#   fct_facet5_na = "fct_facet5_na",
#   ord_facet5 = "ord_facet5",
#   ord_facet5_na = "ord_facet5_na")
)
})
test_facet <- tibble::tibble(
chr_facet5_na = facet_maker(
facet_type = "chr", size = 10, lvls = 5, missing = TRUE),
chr_facet5 = facet_maker(
facet_type = "fct", size = 10, lvls = 5, missing = FALSE),
fct_facet5 = facet_maker(
facet_type = "fct", size = 10, lvls = 5, missing = FALSE),
fct_facet5_na = facet_maker(
facet_type = "fct", size = 10, lvls = 5, missing = TRUE),
ord_facet5 = facet_maker(
facet_type = "ord", size = 10, lvls = 5, missing = FALSE),
ord_facet5_na = facet_maker(
facet_type = "ord", size = 10, lvls = 5, missing = TRUE)
)
testthat::test_that("pull_facet_cols() works", {
test_facet <- tibble::tibble(
chr_facet5_na = facet_maker(
facet_type = "chr", size = 10, lvls = 5, missing = TRUE),
chr_facet5 = facet_maker(
facet_type = "fct", size = 10, lvls = 5, missing = FALSE),
fct_facet5 = facet_maker(
facet_type = "fct", size = 10, lvls = 5, missing = FALSE),
fct_facet5_na = facet_maker(
facet_type = "fct", size = 10, lvls = 5, missing = TRUE),
ord_facet5 = facet_maker(
facet_type = "ord", size = 10, lvls = 5, missing = FALSE),
ord_facet5_na = facet_maker(
facet_type = "ord", size = 10, lvls = 5, missing = TRUE)
)
expect_equal(
object = pull_facet_cols(test_facet),
expected = purrr::set_names(names(test_facet))
# c(chr_facet5_na = "chr_facet5_na",
#   chr_facet5 = "chr_facet5",
#   fct_facet5 = "fct_facet5",
#   fct_facet5_na = "fct_facet5_na",
#   ord_facet5 = "ord_facet5",
#   ord_facet5_na = "ord_facet5_na")
)
})
testthat::test_that("pull_facet_cols() character cols", {
test_chr_facets <- tibble::tibble(
chr_facet5_na = facet_maker(
facet_type = "chr", size = 10, lvls = 5, missing = TRUE),
chr_facet5 = facet_maker(
facet_type = "fct", size = 10, lvls = 5, missing = FALSE),
chr_facet6_na = facet_maker(
facet_type = "chr", size = 10, lvls = 6, missing = TRUE),
chr_facet6 = facet_maker(
facet_type = "fct", size = 10, lvls = 6, missing = FALSE))
#         fct_facet5 = facet_maker(
#           facet_type = "fct", size = 10, lvls = 5, missing = FALSE),
#         fct_facet5_na = facet_maker(
#           facet_type = "fct", size = 10, lvls = 5, missing = TRUE),
#         ord_facet5 = facet_maker(
#           facet_type = "ord", size = 10, lvls = 5, missing = FALSE),
#         ord_facet5_na = facet_maker(
#           facet_type = "ord", size = 10, lvls = 5, missing = TRUE)
# )
expect_equal(
object = pull_facet_cols(test_chr_facets),
expected = purrr::set_names(names(test_chr_facets))
)
})
testthat::test_that("pull_facet_cols() character cols", {
test_chr_facets <- tibble::tibble(
chr_facet5_na = facet_maker(
facet_type = "chr", size = 10, lvls = 5, missing = TRUE),
chr_facet5 = facet_maker(
facet_type = "fct", size = 10, lvls = 5, missing = FALSE),
chr_facet6_na = facet_maker(
facet_type = "chr", size = 10, lvls = 6, missing = TRUE),
chr_facet6 = facet_maker(
facet_type = "fct", size = 10, lvls = 6, missing = FALSE))
#         fct_facet5 = facet_maker(
#           facet_type = "fct", size = 10, lvls = 5, missing = FALSE),
#         fct_facet5_na = facet_maker(
#           facet_type = "fct", size = 10, lvls = 5, missing = TRUE),
#         ord_facet5 = facet_maker(
#           facet_type = "ord", size = 10, lvls = 5, missing = FALSE),
#         ord_facet5_na = facet_maker(
#           facet_type = "ord", size = 10, lvls = 5, missing = TRUE)
# )
expect_equal(
object = pull_facet_cols(test_chr_facets),
expected = purrr::set_names(c("chr_facet5", "chr_facet5_na"))
)
})
testthat::test_that("pull_facet_cols() character cols", {
test_chr_facets <- tibble::tibble(
chr_facet5_na = facet_maker(
facet_type = "chr", size = 10, lvls = 5, missing = TRUE),
chr_facet5 = facet_maker(
facet_type = "fct", size = 10, lvls = 5, missing = FALSE),
chr_facet6_na = facet_maker(
facet_type = "chr", size = 10, lvls = 6, missing = TRUE),
chr_facet6 = facet_maker(
facet_type = "fct", size = 10, lvls = 6, missing = FALSE))
#         fct_facet5 = facet_maker(
#           facet_type = "fct", size = 10, lvls = 5, missing = FALSE),
#         fct_facet5_na = facet_maker(
#           facet_type = "fct", size = 10, lvls = 5, missing = TRUE),
#         ord_facet5 = facet_maker(
#           facet_type = "ord", size = 10, lvls = 5, missing = FALSE),
#         ord_facet5_na = facet_maker(
#           facet_type = "ord", size = 10, lvls = 5, missing = TRUE)
# )
expect_equal(
object = pull_facet_cols(test_chr_facets),
expected = purrr::set_names(c("chr_facet5_na", "chr_facet5"))
)
})
testthat::test_that("pull_facet_cols() factor cols", {
test_fct_facets <- tibble::tibble(
fct_facet5 = facet_maker(
facet_type = "fct", size = 10, lvls = 5, missing = FALSE),
fct_facet5_na = facet_maker(
facet_type = "fct", size = 10, lvls = 5, missing = TRUE),
fct_facet6 = facet_maker(
facet_type = "fct", size = 10, lvls = 5, missing = FALSE),
fct_facet6_na = facet_maker(
facet_type = "fct", size = 10, lvls = 5, missing = TRUE),)
expect_equal(
object = pull_facet_cols(test_fct_facets),
expected = purrr::set_names(c("fct_facet5_na", "fct_facet5"))
)
})
testthat::test_that("pull_facet_cols() factor cols", {
test_fct_facets <- tibble::tibble(
fct_facet5 = facet_maker(
facet_type = "fct", size = 10, lvls = 5, missing = FALSE),
fct_facet5_na = facet_maker(
facet_type = "fct", size = 10, lvls = 5, missing = TRUE),
fct_facet6 = facet_maker(
facet_type = "fct", size = 10, lvls = 6, missing = FALSE),
fct_facet6_na = facet_maker(
facet_type = "fct", size = 10, lvls = 6, missing = TRUE),)
expect_equal(
object = pull_facet_cols(test_fct_facets),
expected = purrr::set_names(c("fct_facet5_na", "fct_facet5"))
)
})
testthat::test_that("pull_facet_cols() factor cols", {
test_fct_facets <- tibble::tibble(
fct_facet5 = facet_maker(
facet_type = "fct", size = 10, lvls = 5, missing = FALSE),
fct_facet5_na = facet_maker(
facet_type = "fct", size = 10, lvls = 5, missing = TRUE),
fct_facet6 = facet_maker(
facet_type = "fct", size = 10, lvls = 6, missing = FALSE),
fct_facet6_na = facet_maker(
facet_type = "fct", size = 10, lvls = 6, missing = TRUE),)
expect_equal(
object = pull_facet_cols(test_fct_facets),
expected = purrr::set_names(c("fct_facet5", "fct_facet5_na"))
)
})
testthat::test_that("pull_facet_cols() ordinal cols", {
test_ord_facets <- tibble::tibble(
ord_facet5 = facet_maker(
facet_type = "ord", size = 10, lvls = 5, missing = FALSE),
ord_facet5_na = facet_maker(
facet_type = "ord", size = 10, lvls = 5, missing = TRUE),
ord_facet6 = facet_maker(
facet_type = "ord", size = 10, lvls = 6, missing = FALSE),
ord_facet6_na = facet_maker(
facet_type = "ord", size = 10, lvls = 6, missing = TRUE))
expect_equal(
object = pull_facet_cols(test_ord_facets),
expected = purrr::set_names(c("ord_facet5", "ord_facet5_na"))
)
})
testthat::test_file("tests/testthat/test-pull_facet_cols.R")
devtools::test()
devtools::test_coverage_active_file()
devtools::load_all(".")
library(utap)
devtools::load_all(".")
library(utap)
devtools::test_coverage_active_file()
devtools::load_all(".")
library(utap)
