NA_real_, Sys.Date() + 3,
Sys.Date() + 4),
size = 10, replace = TRUE),
# two group factor (missing)
fct_var_02 = factor(sample(x = c("group a", "group b", NA_character_),
size = 10, replace = TRUE),
levels = c("group a", "group b")),
# five group factor (missing)
fct_var_05 = factor(sample(x = c("group 1", "group 2", "group 3",
"group 4", "group 5", NA_character_),
size = 10, replace = TRUE),
levels = c("group 1", "group 2", "group 3",
"group 4", "group 5")),
# three group factor (no missing)
fct_var_03 = factor(x = sample(c("group x", "group y", "group z"),
size = 10, replace = TRUE),
levels = c("group x", "group y",
"group z"))
)
usethis::use_data(df_test, overwrite = TRUE)
devtools::load_all()
devtools::document()
library(testPkgApp)
testPkgApp::df_test
# run utility function tests ----------------------------------------------
# testthat::test_file("tests/testthat/test-gg_base.R")
testthat::test_file("tests/testthat/test-binary_vars.R")
usethis::use_data_raw("bin_vars_test")
require(tibble)
bin_vars_test <- tibble::tibble(
# logical (missing)
log_var = sample(c(TRUE, FALSE, NA),
size = 10, replace = TRUE),
# character 2 unique (missing)
chr_var_02 = sample(x = c("YES", "NO", "YES", "NO", NA_character_),
size = 10, replace = TRUE),
# character 3 unique (no missing)
chr_var_03 = sample(c("YES", "NO", "MAYBE"), size = 10, replace = TRUE),
# character 10 unique (no missing)
chr_var_10 = LETTERS[1:10],
# two group factor (missing)
fct_var_02 = factor(sample(x = c("group a", "group b", NA_character_),
size = 10, replace = TRUE),
levels = c("group a", "group b")),
# five group factor (missing)
fct_var_05 = factor(sample(x = c("group 1", "group 2", "group 3",
"group 4", "group 5", NA_character_),
size = 10, replace = TRUE),
levels = c("group 1", "group 2", "group 3",
"group 4", "group 5")),
# three group factor (no missing)
fct_var_03 = factor(x = sample(c("group x", "group y", "group z"),
size = 10, replace = TRUE),
levels = c("group x", "group y",
"group z"))
)
bin_vars_test
bin_vars_test <- tibble::tibble(
# logical (missing)
log_var = sample(c(TRUE, FALSE, NA),
size = 10, replace = TRUE),
# character 2 unique (missing)
chr_var_02 = sample(x = c("YES", "NO", "YES", "NO", NA_character_),
size = 10, replace = TRUE),
# character 3 unique (no missing)
chr_var_03 = sample(c("YES", "NO", "MAYBE"), size = 10, replace = TRUE),
# character 10 unique (no missing)
chr_var_10 = LETTERS[1:10],
# two group factor (missing)
fct_var_02 = factor(sample(x = c("group a", "group b", NA_character_),
size = 10, replace = TRUE),
levels = c("group a", "group b")),
# five group factor (no missing)
fct_var_05 = factor(sample(x = c("group 1", "group 2", "group 3",
"group 4", "group 5"),
size = 10, replace = TRUE),
levels = c("group 1", "group 2", "group 3",
"group 4", "group 5")),
# three group factor (missing)
fct_var_03 = factor(x = sample(c("group x", "group y",
"group z", NA_character_),
size = 10, replace = TRUE),
levels = c("group x", "group y",
"group z"))
)
bin_vars_test
bin_vars_test <- tibble::tibble(
# logical (missing)
log_var = sample(c(TRUE, FALSE, NA),
size = 10, replace = TRUE),
# character 2 unique (missing)
chr_var_02 = sample(x = c("YES", "NO", "YES", "NO", NA_character_),
size = 10, replace = TRUE),
# character 3 unique (no missing)
chr_var_03 = sample(c("YES", "NO", "MAYBE"), size = 10, replace = TRUE),
# character 10 unique (no missing)
chr_var_10 = LETTERS[1:10],
# two group factor (missing)
fct_var_02 = factor(sample(x = c("group a", "group b",
"group a", "group b",
NA_character_),
size = 10, replace = TRUE),
levels = c("group a", "group b")),
# five group factor (no missing)
fct_var_05 = factor(sample(x = c("group 1", "group 2", "group 3",
"group 4", "group 5"),
size = 10, replace = TRUE),
levels = c("group 1", "group 2", "group 3",
"group 4", "group 5")),
# three group factor (missing)
fct_var_03 = factor(x = sample(c("group x", "group y",
"group z", NA_character_),
size = 10, replace = TRUE),
levels = c("group x", "group y",
"group z")))
bin_vars_test
bin_vars_test <- tibble::tibble(
# logical (missing)
log_var = sample(c(TRUE, FALSE, NA),
size = 10, replace = TRUE),
# character 2 unique (missing)
chr_var_02 = sample(x = c("YES", "NO", "YES", "NO", NA_character_),
size = 10, replace = TRUE),
# character 3 unique (no missing)
chr_var_03 = sample(c("YES", "NO", "MAYBE"), size = 10, replace = TRUE),
# character 10 unique (no missing)
chr_var_10 = LETTERS[1:10],
# two group factor (missing)
fct_var_02 = factor(sample(x = c("group a", "group b",
"group a", "group b",
NA_character_, NA_character_),
size = 10, replace = TRUE),
levels = c("group a", "group b")),
# five group factor (no missing)
fct_var_05 = factor(sample(x = c("group 1", "group 2", "group 3",
"group 4", "group 5"),
size = 10, replace = TRUE),
levels = c("group 1", "group 2", "group 3",
"group 4", "group 5")),
# three group factor (missing)
fct_var_03 = factor(x = sample(c("group x", "group y",
"group z", NA_character_),
size = 10, replace = TRUE),
levels = c("group x", "group y",
"group z")))
bin_vars_test
bin_vars_test <- tibble::tibble(
# logical (missing)
log_var = sample(c(TRUE, FALSE, NA),
size = 10, replace = TRUE),
# character 2 unique (missing)
chr_var_02 = sample(x = c("YES", "NO", "YES", "NO", NA_character_),
size = 10, replace = TRUE),
# character 3 unique (no missing)
chr_var_03 = sample(c("YES", "NO", "MAYBE"), size = 10, replace = TRUE),
# character 10 unique (no missing)
chr_var_10 = LETTERS[1:10],
# two group factor (missing)
fct_var_02 = factor(sample(x = c("group a", "group b",
"group a", "group b",
NA_character_),
size = 10, replace = TRUE),
levels = c("group a", "group b")),
# five group factor (no missing)
fct_var_05 = factor(sample(x = c("group 1", "group 2", "group 3",
"group 4", "group 5"),
size = 10, replace = TRUE),
levels = c("group 1", "group 2", "group 3",
"group 4", "group 5")),
# three group factor (missing)
fct_var_03 = factor(x = sample(c("group x", "group y",
"group z", NA_character_),
size = 10, replace = TRUE),
levels = c("group x", "group y",
"group z")))
bin_vars_test
bin_vars_test <- tibble::tibble(
# logical (missing)
log_var = sample(c(TRUE, FALSE, NA),
size = 10, replace = TRUE),
# character 2 unique (missing)
chr_var_02 = sample(x = c("YES", "NO", "YES", "NO", NA_character_),
size = 10, replace = TRUE),
# character 3 unique (no missing)
chr_var_03 = sample(c("YES", "NO", "MAYBE"), size = 10, replace = TRUE),
# character 10 unique (no missing)
chr_var_10 = LETTERS[1:10],
# two group factor (missing)
fct_var_02 = factor(sample(x = c("group a", "group b",
"group a", "group b",
NA_character_),
size = 10, replace = TRUE),
levels = c("group a", "group b")),
# five group factor (no missing)
fct_var_05 = factor(sample(x = c("group 1", "group 2", "group 3",
"group 4", "group 5"),
size = 10, replace = TRUE),
levels = c("group 1", "group 2", "group 3",
"group 4", "group 5")),
# three group factor (missing)
fct_var_03 = factor(x = sample(c("group x", "group y",
"group z", NA_character_),
size = 10, replace = TRUE),
levels = c("group x", "group y",
"group z")))
bin_vars_test
bin_vars_test <- tibble::tibble(
# logical (missing)
log_var = sample(c(TRUE, FALSE, NA),
size = 10, replace = TRUE),
# character 2 unique (missing)
chr_var_02 = sample(x = c("YES", "NO", "YES", "NO", NA_character_),
size = 10, replace = TRUE),
# character 3 unique (no missing)
chr_var_03 = sample(c("YES", "NO", "MAYBE"), size = 10, replace = TRUE),
# character 10 unique (no missing)
chr_var_10 = LETTERS[1:10],
# two group factor (missing)
fct_var_02 = factor(sample(x = c("group a", "group b",
"group a", "group b",
NA_character_),
size = 10, replace = TRUE),
levels = c("group a", "group b")),
# five group factor (no missing)
fct_var_05 = factor(sample(x = c("group 1", "group 2", "group 3",
"group 4", "group 5"),
size = 10, replace = TRUE),
levels = c("group 1", "group 2", "group 3",
"group 4", "group 5")),
# three group factor (missing)
fct_var_03 = factor(x = sample(c("group x", "group y",
NA_character_),
size = 10, replace = TRUE),
levels = c("group x", "group y",
"group z")))
bin_vars_test
usethis::use_data(bin_vars_test, overwrite = TRUE)
devtools::load_all()
devtools::document()
glimpse(dplyr::starwars)
devtools::load_all()
devtools::document()
library(testPkgApp)
renv::status()
renv::snapshot()
binary_vars(dplyr::starwars)
# run utility function tests ----------------------------------------------
# testthat::test_file("tests/testthat/test-gg_base.R")
testthat::test_file("tests/testthat/test-binary_vars.R")
binary_vars <- function(df) {
# remove missing
complete_df <- sapply(df, na.omit)
# get names
nms <- names(complete_df)
# set names in names
df_nms <- purrr::set_names(nms)
# check for binary variables
check_binary <- function(x) {
length(unique(x)) == 2
}
# get TRUE/FALSE binaries
bin_log <- sapply(complete_df, check_binary)
# subset names with binaries
df_nms[bin_log]
}
binary_vars(df = palmerpenguins::penguins)
#' @examples
#' require(NHANES)
#' require(palmerpenguins)
#' binary_vars(df = NHANES::NHANES)
#' binary_vars(df = palmerpenguins::penguins)
#' # verify with str()
#' str(dplyr::select(NHANES::NHANES,
#'   dplyr::all_of(binary_vars(df = NHANES::NHANES))))
#' str(dplyr::select(palmerpenguins::penguins,
#'   dplyr::all_of(binary_vars(df = palmerpenguins::penguins))))
binary_vars <- function(df) {
# remove missing
# complete_df <- sapply(df, na.omit)
# get names
nms <- names(df)
# set names in names
df_nms <- purrr::set_names(nms)
# check for binary variables
check_binary <- function(x) {
length(unique(x)) == 2
}
# get TRUE/FALSE binaries
bin_log <- sapply(df, check_binary)
# subset names with binaries
df_nms[bin_log]
}
binary_vars(df = palmerpenguins::penguins)
devtools::load_all()
devtools::document()
library(testPkgApp)
library(testthat)
# run utility function tests ----------------------------------------------
# testthat::test_file("tests/testthat/test-gg_base.R")
testthat::test_file("tests/testthat/test-binary_vars.R")
# run utility function tests ----------------------------------------------
# testthat::test_file("tests/testthat/test-gg_base.R")
testthat::test_file("tests/testthat/test-binary_vars.R")
devtools::load_all()
devtools::document()
library(testPkgApp)
# run utility function tests ----------------------------------------------
# testthat::test_file("tests/testthat/test-gg_base.R")
testthat::test_file("tests/testthat/test-binary_vars.R")
binary_vars(df = palmerpenguins::penguins)
# run utility function tests ----------------------------------------------
# testthat::test_file("tests/testthat/test-gg_base.R")
testthat::test_file("tests/testthat/test-binary_vars.R")
bin_vars_test <- tibble::tibble(
# logical (no missing)
log_var_02 = sample(c(TRUE, FALSE),
size = 100, replace = TRUE),
# logical (missing)
log_var_03 = sample(c(TRUE, FALSE, NA),
size = 100, replace = TRUE),
# character 2 unique (with missing)
chr_var_02 = sample(x = c("YES", "NO",
"YES", "NO", NA_character_),
size = 100, replace = TRUE),
# character 3 unique (missing)
chr_var_03 = sample(c("YES", "NO",
"MAYBE", NA_character_),
size = 100, replace = TRUE),
# two level factor (missing)
fct_var_02 = factor(sample(x = c("group a", "group b",
"group a", "group b",
NA_character_),
size = 10, replace = TRUE),
levels = c("group a", "group b")),
# three level orderd factor (missing)
ord_var_03 = factor(sample(x = c("group 1", "group 2",
"group 3", NA_character_),
size = 10, replace = TRUE),
levels = c("group 1", "group 2", "group 3"),
ordered = TRUE),
# three level factor with only two levels assigned (missing)
fct_var_03 = factor(x = sample(c("group x", "group y",
NA_character_),
size = 10, replace = TRUE),
levels = c("group x", "group y",
"group z")))
bin_vars_test <- tibble::tibble(
# logical (no missing)
log_var_02 = sample(c(TRUE, FALSE),
size = 100, replace = TRUE),
# logical (missing)
log_var_03 = sample(c(TRUE, FALSE, NA),
size = 100, replace = TRUE),
# character 2 unique (with missing)
chr_var_02 = sample(x = c("YES", "NO",
"YES", "NO", NA_character_),
size = 100, replace = TRUE),
# character 3 unique (missing)
chr_var_03 = sample(c("YES", "NO",
"MAYBE", NA_character_),
size = 100, replace = TRUE),
# two level factor (missing)
fct_var_02 = factor(sample(x = c("group a", "group b",
"group a", "group b",
NA_character_),
size = 100, replace = TRUE),
levels = c("group a", "group b")),
# three level orderd factor (missing)
ord_var_03 = factor(sample(x = c("group 1", "group 2",
"group 3", NA_character_),
size = 100, replace = TRUE),
levels = c("group 1", "group 2", "group 3"),
ordered = TRUE),
# three level factor with only two levels assigned (missing)
fct_var_03 = factor(x = sample(c("group x", "group y",
NA_character_),
size = 100, replace = TRUE),
levels = c("group x", "group y",
"group z")))
bin_vars_test
usethis::use_data(bin_vars_test, overwrite = TRUE)
# run utility function tests ----------------------------------------------
# testthat::test_file("tests/testthat/test-gg_base.R")
testthat::test_file("tests/testthat/test-binary_vars.R")
# run utility function tests ----------------------------------------------
# testthat::test_file("tests/testthat/test-gg_base.R")
testthat::test_file("tests/testthat/test-binary_vars.R")
# run utility function tests ----------------------------------------------
# testthat::test_file("tests/testthat/test-gg_base.R")
testthat::test_file("tests/testthat/test-binary_vars.R")
starwars <- dplyr::starwars
sw_test <- dplyr::slice_sample(starwars,
n = 100,
replace = FALSE)
binary_vars(sw_test)
# run utility function tests ----------------------------------------------
# testthat::test_file("tests/testthat/test-gg_base.R")
testthat::test_file("tests/testthat/test-binary_vars.R")
# run utility function tests ----------------------------------------------
# testthat::test_file("tests/testthat/test-gg_base.R")
testthat::test_file("tests/testthat/test-binary_vars.R")
# run utility function tests ----------------------------------------------
# testthat::test_file("tests/testthat/test-gg_base.R")
testthat::test_file("tests/testthat/test-binary_vars.R")
bin_vars_test <- tibble::tibble(
# logical (no missing)
log_var_02 = sample(c(TRUE, FALSE),
size = 100, replace = TRUE),
# logical (with missing)
log_var_03 = sample(c(TRUE, FALSE, NA),
size = 100, replace = TRUE),
# character 2 unique (with missing values)
chr_var_02 = sample(x = c("YES", "NO",
"YES", "NO", NA_character_),
size = 100, replace = TRUE),
# character 3 unique (with missing values)
chr_var_03 = sample(c("YES", "NO",
"MAYBE", NA_character_),
size = 100, replace = TRUE),
# two level factor (with missing)
fct_var_02 = factor(sample(x = c("group a", "group b",
"group a", "group b",
NA_character_),
size = 100, replace = TRUE),
levels = c("group a", "group b")),
# two level ordered factor (with missing)
ord_var_02 = factor(sample(x = c("high", "low",
"high", "low",
NA_character_),
size = 100, replace = TRUE),
levels = c("low", "high"),
ordered = TRUE),
# three level ordered factor (with missing)
ord_var_03 = factor(sample(x = c("group 1", "group 2",
"group 3", NA_character_),
size = 100, replace = TRUE),
levels = c("group 1", "group 2", "group 3"),
ordered = TRUE),
# three level factor, with only two levels represented (with missing)
fct_var_03 = factor(x = sample(c("group x", "group y",
NA_character_),
size = 100, replace = TRUE),
levels = c("group x", "group y",
"group z")))
bin_vars_test
bin_vars_test |> str()
bin_vars_test <- tibble::tibble(
# logical (no missing)
log_var_02 = sample(c(TRUE, FALSE),
size = 100, replace = TRUE),
# logical (with missing)
log_var_03 = sample(c(TRUE, FALSE, NA),
size = 100, replace = TRUE),
# character 2 unique (with missing values)
chr_var_02 = sample(x = c("YES", "NO",
"YES", "NO", NA_character_),
size = 100, replace = TRUE),
# character 3 unique (with missing values)
chr_var_03 = sample(c("YES", "NO",
"MAYBE", NA_character_),
size = 100, replace = TRUE),
# two level factor (with missing)
fct_var_02 = factor(sample(x = c("group a", "group b",
"group a", "group b",
NA_character_),
size = 100, replace = TRUE),
levels = c("group a", "group b")),
# two level ordered factor (with missing)
ord_var_02 = factor(sample(x = c("high", "low",
"high", "low",
NA_character_),
size = 100, replace = TRUE),
levels = c("low", "high"),
ordered = TRUE),
# three level ordered factor (with missing)
ord_var_03 = factor(sample(x = c("small", "medium",
"large", NA_character_),
size = 100, replace = TRUE),
levels = c("small", "medium", "large"),
ordered = TRUE),
# three level factor, with only two levels represented (with missing)
fct_var_03 = factor(x = sample(c("group x", "group y",
NA_character_),
size = 100, replace = TRUE),
levels = c("group x", "group y",
"group z")))
bin_vars_test |> str()
# run utility function tests ----------------------------------------------
# testthat::test_file("tests/testthat/test-gg_base.R")
testthat::test_file("tests/testthat/test-binary_vars.R")
# run utility function tests ----------------------------------------------
# testthat::test_file("tests/testthat/test-gg_base.R")
testthat::test_file("tests/testthat/test-binary_vars.R")
# run utility function tests ----------------------------------------------
# testthat::test_file("tests/testthat/test-gg_base.R")
testthat::test_file("tests/testthat/test-binary_vars.R")
# run utility function tests ----------------------------------------------
# testthat::test_file("tests/testthat/test-gg_base.R")
testthat::test_file("tests/testthat/test-binary_vars.R")
# run utility function tests ----------------------------------------------
# testthat::test_file("tests/testthat/test-gg_base.R")
testthat::test_file("tests/testthat/test-binary_vars.R")
styler:::style_selection()
devtools::load_all()
devtools::document()
library(testPkgApp)
devtools::load_all()
devtools::document()
library(testPkgApp)
# run utility function tests ----------------------------------------------
# testthat::test_file("tests/testthat/test-gg_base.R")
testthat::test_file("tests/testthat/test-binary_vars.R")
