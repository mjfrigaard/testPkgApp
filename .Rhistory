library(testPkgApp)
# test_check("testPkgApp")
test_file("tests/testthat/test-mod_display_plot_server.R")
input_list <- list(
x = "imdb_rating",
y = "audience_score",
z = "mpaa_rating",
alpha = 0.5,
size = 2,
plot_title = "Test plot title")
names(input_list)
dput(names(input_list))
library(testthat)
library(testPkgApp)
# test_check("testPkgApp")
test_file("tests/testthat/test-mod_display_plot_server.R")
library(testthat)
library(testPkgApp)
# test_check("testPkgApp")
test_file("tests/testthat/test-mod_display_plot_server.R")
library(testthat)
library(testPkgApp)
# test_check("testPkgApp")
test_file("tests/testthat/test-mod_display_plot_server.R")
library(testthat)
library(testPkgApp)
# test_check("testPkgApp")
test_file("tests/testthat/test-mod_display_plot_server.R")
library(testthat)
library(testPkgApp)
# test_check("testPkgApp")
test_file("tests/testthat/test-mod_display_plot_server.R")
library(testthat)
library(testPkgApp)
# test_check("testPkgApp")
test_file("tests/testthat/test-mod_display_plot_server.R")
library(testthat)
library(testPkgApp)
# test_check("testPkgApp")
test_file("tests/testthat/test-mod_display_plot_server.R")
library(testthat)
library(testPkgApp)
# test_check("testPkgApp")
test_file("tests/testthat/test-mod_display_plot_server.R")
library(testthat)
library(testPkgApp)
# test_check("testPkgApp")
test_file("tests/testthat/test-mod_display_plot_server.R")
library(testthat)
library(testPkgApp)
# test_check("testPkgApp")
test_file("tests/testthat/test-mod_display_plot_server.R")
library(testthat)
library(testPkgApp)
# test_check("testPkgApp")
test_file("tests/testthat/test-mod_display_plot_server.R")
library(testthat)
library(testPkgApp)
# test_check("testPkgApp")
test_file("tests/testthat/test-mod_display_plot_server.R")
library(testthat)
library(testPkgApp)
# test_check("testPkgApp")
test_file("tests/testthat/test-mod_display_plot_server.R")
library(testthat)
library(testPkgApp)
# test_check("testPkgApp")
test_file("tests/testthat/test-mod_display_plot_server.R")
library(testthat)
library(testPkgApp)
# test_check("testPkgApp")
test_file("tests/testthat/test-mod_display_plot_server.R")
devtools::load_all()
devtools::document()
library(testPkgApp)
runShinyApp()
devtools::load_all()
devtools::document()
library(testPkgApp)
runShinyApp()
library(testthat)
library(testPkgApp)
# test_check("testPkgApp")
test_file("tests/testthat/test-mod_display_plot_server.R")
usethis::use_test("mod_var_input_server")
# test_check("testPkgApp")
test_file("tests/testthat/test-mod_var_input_server.R")
styler:::style_selection()
devtools::load_all()
devtools::document()
library(testPkgApp)
runShinyApp()
devtools::load_all()
devtools::document()
library(testPkgApp)
runShinyApp()
devtools::load_all()
devtools::document()
library(testPkgApp)
runShinyApp()
devtools::load_all()
devtools::document()
library(testPkgApp)
runShinyApp()
devtools::load_all()
devtools::document()
library(testPkgApp)
runShinyApp()
devtools::load_all()
devtools::document()
library(testPkgApp)
runShinyApp()
devtools::load_all()
devtools::document()
library(testPkgApp)
runShinyApp()
devtools::load_all()
devtools::document()
library(testPkgApp)
runShinyApp()
devtools::load_all()
devtools::document()
library(testPkgApp)
runShinyApp()
print(names(movies), width = 2)
print(names(movies), width = 2, max.levels = NULL)
print(names(movies), width = 100, max.levels = NULL)
print(names(movies), width = 60, max.levels = NULL)
devtools::load_all()
devtools::document()
library(testPkgApp)
runShinyApp()
styler::style_pkg()
devtools::load_all()
devtools::document()
library(testPkgApp)
runShinyApp()
devtools::load_all()
devtools::document()
library(testPkgApp)
runShinyApp()
devtools::load_all()
devtools::document()
library(testPkgApp)
runShinyApp()
devtools::load_all()
devtools::document()
library(testPkgApp)
runShinyApp()
# test_file("tests/testthat/test-gg_base.R")
# test_file("tests/testthat/test-gg_points.R")
# test_file("tests/testthat/test-mod_var_input_server.R")
test_file("tests/testthat/test-mod_display_plot_server.R")
list.files("tests/testthat/")
devtools::test()
rep(1:4, each = 2, times = 3)
rep(sample(LETTERS, size = 5, replace = FALSE), each = 2, times = 3)
length(rep(sample(LETTERS, size = 5, replace = FALSE), each = 2, times = 3))
length(rep(sample(LETTERS, size = 5, replace = FALSE), each = 2, times = 4))
length(rep(sample(LETTERS, size = 5, replace = FALSE), each = 3, times = 4))
length(rep(sample(LETTERS, size = 5, replace = FALSE), each = 4, times = 4))
length(rep(sample(LETTERS, size = 5, replace = FALSE), each = 5, times = 4))
df_test <- tibble::tibble(
x = rnorm(n = 100, mean = 5, sd = 2),
y = rnorm(n = 100, mean = 10, sd = 5),
z = rep(sample(LETTERS, size = 5, replace = FALSE), each = 5, times = 4)
)
df_test
rep(sample(LETTERS, size = 5, replace = FALSE), each = 5, times = 4)
df_test
df_test <- data.frame(
'x' = rnorm(n = 100, mean = 5, sd = 2),
'y' = rnorm(n = 100, mean = 10, sd = 5),
'z' = rep(sample(LETTERS, size = 5, replace = FALSE), each = 5, times = 4)
)
df_test
# test_check("testPkgApp")
test_file("tests/testthat/test-gg_base.R")
library(testthat)
library(testPkgApp)
# test_check("testPkgApp")
test_file("tests/testthat/test-gg_base.R")
# test_check("testPkgApp")
test_file("tests/testthat/test-gg_base.R")
# test_check("testPkgApp")
test_file("tests/testthat/test-gg_base.R")
# test_check("testPkgApp")
test_file("tests/testthat/test-gg_base.R")
# test_check("testPkgApp")
test_file("tests/testthat/test-gg_base.R")
# test_check("testPkgApp")
test_file("tests/testthat/test-gg_base.R")
df_test <- data.frame(
'x' = rnorm(n = 100, mean = 5, sd = 2),
'y' = rnorm(n = 100, mean = 10, sd = 5),
'z' = rep(sample(LETTERS, size = 5, replace = FALSE),
each = 5,
times = 4))
ggp_base <- gg_base(
df = df_test,
x_var = 'x',
y_var = 'y'
)
ggp_base
nrow(movies)
651 * .10
movies_test <- sample(testPkgApp::movies, size = 100, replace = FALSE)
movies_test <- dplyr::slice_sample(testPkgApp::movies, n = 100, replace = FALSE)
movies_test
# test_check("testPkgApp")
test_file("tests/testthat/test-gg_base.R")
testthat::snapshot_review('gg_base/')
install.packages('diffviewer')
testthat::snapshot_review('gg_base/')
# test_check("testPkgApp")
test_file("tests/testthat/test-gg_base.R")
devtools::load_all()
devtools::document()
library(testPkgApp)
# test_check("testPkgApp")
# test_file("tests/testthat/test-gg_base.R")
test_file("tests/testthat/test-gg_points.R")
devtools::load_all()
devtools::document()
library(testPkgApp)
test_file("tests/testthat/test-gg_points.R")
devtools::load_all()
devtools::document()
library(testPkgApp)
# test_check("testPkgApp")
# test_file("tests/testthat/test-gg_base.R")
test_file("tests/testthat/test-gg_points.R")
# test_check("testPkgApp")
# test_file("tests/testthat/test-gg_base.R")
test_file("tests/testthat/test-gg_points.R")
devtools::load_all()
devtools::document()
library(testPkgApp)
ggplot2::aes(color = {{ col_var }}), ...
test_file("tests/testthat/test-gg_points.R")
devtools::load_all()
devtools::document()
library(testPkgApp)
# test_check("testPkgApp")
# test_file("tests/testthat/test-gg_base.R")
test_file("tests/testthat/test-gg_points.R")
# test_check("testPkgApp")
test_file("tests/testthat/test-gg_base.R")
devtools::load_all()
devtools::document()
library(testPkgApp)
# test_check("testPkgApp")
# test_file("tests/testthat/test-gg_base.R")
# test_file("tests/testthat/test-gg_points.R")
test_file("tests/testthat/test-mod_var_input_server.R")
# test_check("testPkgApp")
# test_file("tests/testthat/test-gg_base.R")
# test_file("tests/testthat/test-gg_points.R")
test_file("tests/testthat/test-mod_var_input_server.R")
# test_check("testPkgApp")
# test_file("tests/testthat/test-gg_base.R")
# test_file("tests/testthat/test-gg_points.R")
test_file("tests/testthat/test-mod_var_input_server.R")
# test_check("testPkgApp")
# test_file("tests/testthat/test-gg_base.R")
# test_file("tests/testthat/test-gg_points.R")
test_file("tests/testthat/test-mod_var_input_server.R")
# test_check("testPkgApp")
# test_file("tests/testthat/test-gg_base.R")
# test_file("tests/testthat/test-gg_points.R")
test_file("tests/testthat/test-mod_var_input_server.R")
devtools::load_all()
devtools::document()
library(testPkgApp)
devtools::load_all()
devtools::document()
library(testPkgApp)
# test_check("testPkgApp")
# test_file("tests/testthat/test-gg_base.R")
# test_file("tests/testthat/test-gg_points.R")
test_file("tests/testthat/test-mod_var_input_server.R")
# test_check("testPkgApp")
# test_file("tests/testthat/test-gg_base.R")
# test_file("tests/testthat/test-gg_points.R")
test_file("tests/testthat/test-mod_var_input_server.R")
# test_check("testPkgApp")
# test_file("tests/testthat/test-gg_base.R")
# test_file("tests/testthat/test-gg_points.R")
test_file("tests/testthat/test-mod_var_input_server.R")
# test_check("testPkgApp")
# test_file("tests/testthat/test-gg_base.R")
# test_file("tests/testthat/test-gg_points.R")
test_file("tests/testthat/test-mod_var_input_server.R")
# test_check("testPkgApp")
# test_file("tests/testthat/test-gg_base.R")
# test_file("tests/testthat/test-gg_points.R")
test_file("tests/testthat/test-mod_var_input_server.R")
# test_check("testPkgApp")
# test_file("tests/testthat/test-gg_base.R")
# test_file("tests/testthat/test-gg_points.R")
# test_file("tests/testthat/test-mod_var_input_server.R")
test_file("tests/testthat/test-mod_display_plot_server.R")
# test_check("testPkgApp")
# test_file("tests/testthat/test-gg_base.R")
# test_file("tests/testthat/test-gg_points.R")
# test_file("tests/testthat/test-mod_var_input_server.R")
test_file("tests/testthat/test-mod_display_plot_server.R")
# test_check("testPkgApp")
# test_file("tests/testthat/test-gg_base.R")
# test_file("tests/testthat/test-gg_points.R")
# test_file("tests/testthat/test-mod_var_input_server.R")
test_file("tests/testthat/test-mod_display_plot_server.R")
# test_check("testPkgApp")
# test_file("tests/testthat/test-gg_base.R")
# test_file("tests/testthat/test-gg_points.R")
# test_file("tests/testthat/test-mod_var_input_server.R")
test_file("tests/testthat/test-mod_display_plot_server.R")
# test_check("testPkgApp")
# test_file("tests/testthat/test-gg_base.R")
# test_file("tests/testthat/test-gg_points.R")
# test_file("tests/testthat/test-mod_var_input_server.R")
test_file("tests/testthat/test-mod_display_plot_server.R")
# test_check("testPkgApp")
# test_file("tests/testthat/test-gg_base.R")
# test_file("tests/testthat/test-gg_points.R")
# test_file("tests/testthat/test-mod_var_input_server.R")
# test_file("tests/testthat/test-mod_display_plot_server.R")
# devtools::test()
testthat::test_dir("tests/testthat/")
# test_check("testPkgApp")
# test_file("tests/testthat/test-gg_base.R")
# test_file("tests/testthat/test-gg_points.R")
# test_file("tests/testthat/test-mod_var_input_server.R")
# test_file("tests/testthat/test-mod_display_plot_server.R")
devtools::test()
library(testthat)
library(testPkgApp)
test_check("testPkgApp")
# This file is part of the standard setup for testthat.
# It is recommended that you do not modify it.
#
# Where should you do additional test configuration?
# Learn more about the roles of various files in:
# * https://r-pkgs.org/tests.html
# * https://testthat.r-lib.org/reference/test_package.html#special-files
library(testthat)
library(testPkgApp)
# test_file("tests/testthat/test-gg_base.R")
# test_file("tests/testthat/test-gg_points.R")
# test_file("tests/testthat/test-mod_var_input_server.R")
# test_file("tests/testthat/test-mod_display_plot_server.R")
testthat::test_dir("tests/testthat/")
# test_file("tests/testthat/test-gg_base.R")
# test_file("tests/testthat/test-gg_points.R")
# test_file("tests/testthat/test-mod_var_input_server.R")
# test_file("tests/testthat/test-mod_display_plot_server.R")
testthat::test_dir("tests/testthat/")
fs::dir_tree("tests/testthat/")
fs::dir_tree("tests/testthat/", regexp = "^test-gg_")
fs::dir_ls("tests/testthat/", regexp = "^test-gg_")
fs::dir_ls("tests/testthat/", regexp = "^tests/testthat/test-gg_")
fs::dir_tree("tests/testthat/", regexp = "^tests/testthat/test-gg_")
#| echo: false
fs::dir_tree("tests/testthat/", regexp = "server.R$")
install.packages(c("checkmate", "gtsummary", "pak", "s2", "units", "xml2"))
mod_display_plot_ui(id = "test")
library(testPkgApp)
test_file("tests/testthat/test-gg_base.R")
library(testthat)
library(testPkgApp)
test_file("tests/testthat/test-gg_base.R")
runShinyApp()
devtools::load_all()
devtools::document()
library(testPkgApp)
runShinyApp()
shinytest2::use_shinytest2()
usethis::use_test("runShinyApp")
# test_file("tests/testthat/test-gg_base.R")
# test_file("tests/testthat/test-gg_points.R")
# test_file("tests/testthat/test-mod_var_input_server.R")
# test_file("tests/testthat/test-mod_display_plot_server.R")
test_file("tests/testthat/test-runShinyApp.R")
install.packages("shinytest2")
library(shinytest2)
# test_file("tests/testthat/test-gg_base.R")
# test_file("tests/testthat/test-gg_points.R")
# test_file("tests/testthat/test-mod_var_input_server.R")
# test_file("tests/testthat/test-mod_display_plot_server.R")
test_file("tests/testthat/test-runShinyApp.R")
# test_file("tests/testthat/test-gg_base.R")
# test_file("tests/testthat/test-gg_points.R")
# test_file("tests/testthat/test-mod_var_input_server.R")
# test_file("tests/testthat/test-mod_display_plot_server.R")
test_file("tests/testthat/test-runShinyApp.R")
# test_file("tests/testthat/test-gg_base.R")
# test_file("tests/testthat/test-gg_points.R")
# test_file("tests/testthat/test-mod_var_input_server.R")
# test_file("tests/testthat/test-mod_display_plot_server.R")
test_file("tests/testthat/test-runShinyApp.R")
record_test()
remotes::install_github("rstudio/chromote")
chromote:::find_chrome()
usethis::edit_r_profile()
Sys.setenv(CHROMOTE_CHROME = "/Users/mjfrigaard/Library/Application Support/quarto/chromium/mac-869685/chrome-mac/Chromium.app")
renv::snapshot()
install.packages("yaml")
install.packages("pak")
Sys.setenv(CHROMOTE_CHROME = "/Applications/Chromium.app")
b <- ChromoteSession$new()
# remotes::install_github("rstudio/chromote", force = TRUE)
library(chromote)
Sys.setenv(CHROMOTE_CHROME = "/Applications/Chromium.app/Contents/MacOS/Chromium")
chromote::find_chrome()
library(shinytest2)
app <- AppDriver$new(name = "test-run-01", height = 596, width = 1156)
app$view()
app$set_inputs(`vars-y` = "critics_score")
app$set_inputs(`vars-x` = "audience_score")
app$expect_values()
app$get_values()
# shinytest2::test_app()
# testthat::test_file("tests/testthat/test-gg_base.R")
testthat::test_file("tests/testthat/test-shinytest2.R")
app$stop
app$stop()
library(testthat)
# for shinytest2
# remotes::install_github("rstudio/chromote", force = TRUE, quiet = TRUE)
library(chromote)
Sys.setenv(CHROMOTE_CHROME = "/Applications/Chromium.app/Contents/MacOS/Chromium")
chromote::find_chrome()
# run test-runShinyApp.R -------------------------------------------------
# https://rstudio.github.io/shinytest2/articles/use-package.html#application-objects-created-by-functions
testthat::test_file("tests/testthat/test-runShinyApp.R")
testthat::test_file("tests/testthat/test-scatterplot-mappings.R")
# run all tests -----------------------------------------------------------
shinytest2::test_app()
# create test-scatterplot-mappings.R -----------------------------------------
## in console ------
shiny_app <- testPkgApp::runShinyApp()
app <- AppDriver$new(shiny_app, height = 596, width = 1156)
# put all values in list
all_values <- app$get_values()
# inspect
str(all_values)
# get module output
plot_value <- app$get_value(output = "plot-scatterplot")
# get mappings
plot_mappings <- plot_value$coordmap$panels[[1]]$mapping
plot_mappings
all_values$output$`plot-scatterplot`$coordmap$panels[[1]]$mapping
library(testthat)
# for shinytest2
# remotes::install_github("rstudio/chromote", force = TRUE, quiet = TRUE)
library(chromote)
Sys.setenv(CHROMOTE_CHROME = "/Applications/Chromium.app/Contents/MacOS/Chromium")
chromote::find_chrome()
# run export-data-plot ----------------------------------------------------
app <- AppDriver$new(name = "export-data-plot", height = 596, width = 1156)
library(testthat)
# for shinytest2
# remotes::install_github("rstudio/chromote", force = TRUE, quiet = TRUE)
library(chromote)
Sys.setenv(CHROMOTE_CHROME = "/Applications/Chromium.app/Contents/MacOS/Chromium")
chromote::find_chrome()
library(shinytest2)
# run export-data-plot ----------------------------------------------------
app <- AppDriver$new(name = "export-data-plot", height = 596, width = 1156)
app$view()
app$get_value(export = "plot-app_data")
app$get_value(export = "plot-app_graph")
# set values
app$set_inputs(`vars-z` = "genre")
app$set_inputs(`vars-x` = "audience_score")
app$set_inputs(`vars-y` = "critics_score")
# get scatterplot object
scatter_object <- app$get_value(output = "plot-scatterplot")
str(scatter_object)
names(scatter_object)
# find mappings
scatter_object$coordmap$panels[[1]]$mapping
# find mappings
scatter_object$coordmap$panels[[1]]$mapping
# store plot mappings
plot_mappings <- scatter_object$coordmap$panels[[1]]$mapping
# test
stringr::str_remove_all(
plot_mappings[2],
pattern = "^.data|\\[\\[|\\]\\]|\"|\"")
get_plot_labels <- function(plot_mappings) {
expect_mpngs <- purrr::map(.x = plot_mappings,
.f = stringr::str_remove_all,
pattern = "^.data|\\[\\[|\\]\\]|\"|\"")
expected_labels <- list(
x = stringr::str_replace_all(tools::toTitleCase(expect_mpngs$x), "_", " "),
y = stringr::str_replace_all(tools::toTitleCase(expect_mpngs$y), "_", " "),
colour = expect_mpngs$colour)
return(expected_labels)
}
expected_labels <- get_plot_labels(plot_mappings)
expected_labels
exported_app_graph <- app$get_value(export = "plot-app_graph")
str(exported_app_graph)
names(exported_app_graph)
exported_app_graph$labels
plot_labels <- exported_app_graph$labels[c('x', 'y', 'colour')]
plot_labels
# now write expectation using waldo::compare()
waldo::compare(
x = plot_labels,
y = expected_labels)
